plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
	id 'me.champeau.jmh' version '0.7.2'
}

group = 'mira.space'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

bootJar {
	archiveFileName = rootProject.name + '.jar'
}

checkstyle {
	toolVersion = "10.23.0"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.graphql-java:graphql-java-tools:5.2.4'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	jmh "org.openjdk.jmh:jmh-core:1.36"
	jmhAnnotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:1.36"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Checkstyle).configureEach {
	reports {
		xml.required = false
		html.required = true
	}
}

sourceSets {
	jmh {
		java {
			srcDirs = ['src/jmh/java']
		}
	}
}

// if I need to set jmh mode from gradle
//jmh {
//	fork = 1
//	iterations = 2
//	warmupIterations = 1
//	timeOnIteration = '10s'
//	benchmarkMode = ['avgt']
//  timeUnit = 'us'
//}